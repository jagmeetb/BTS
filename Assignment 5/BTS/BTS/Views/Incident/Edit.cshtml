<!--
Author: Jagmeet,mona
-->


@model BTS.Controllers.IncidentEditForm

@{
    ViewBag.Title = "Edit";
    var userAccount = new BTS.Controllers.UserAccount(User as System.Security.Claims.ClaimsPrincipal);

}

<h2>Edit</h2>
<script src="@Url.Content("~/Scripts/jquery-2.2.1.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#myButton").click(function () {

            var el=document.getElementsByTagName("*");
            for(i=0;i<el.length;i++)
                if(el[i].style.display=="none"){
                    el[i].style.display="";
                    break;
                }

        });
    });

</script>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit an existing incident - previous PDF will NOT be removed if you do not upload a new file.</h4>  
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int i = 0; i < Model.StudentIds.Count(); i++)
        {
            if (Model.StudentIds[i] != "")
            {
                <div id="students">
                    <div class="form-group" name="StudentIds">
                        @Html.LabelFor(model => Model.StudentIds, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => Model.StudentIds[@i], new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.StudentIds[@i], "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.StudentNames, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => Model.StudentNames[@i], new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.StudentNames[@i], "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
            else {
                <div id="students" style="display:none">
                    <div class="form-group" name="StudentIds">
                        @Html.LabelFor(model => Model.StudentIds, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => Model.StudentIds[@i], new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.StudentIds[@i], "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.StudentNames, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => Model.StudentNames[@i], new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.StudentNames[@i], "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }


        }

                    <input type="button" id="myButton" value="Add student" />
                    <br /> 


        <div class="form-group">
            @Html.LabelFor(model => model.InstructorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InstructorName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.InstructorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.program, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.program, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.program, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.campus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.campus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.campus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocUpload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocUpload, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocUpload, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
