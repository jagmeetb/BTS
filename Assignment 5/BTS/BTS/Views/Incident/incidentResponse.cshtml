@model BTS.Controllers.IncidentResponse

@{
    ViewBag.Title = "Closing Incident";
}

<h2>Close Incident</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>
            @Html.ValueFor(model => model.description)
        </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--
        <div class="form-group">
            @Html.LabelFor(model => model.incidentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.incidentID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.incidentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.instructorID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.instructorID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.instructorID, "", new { @class = "text-danger" })
            </div>
        </div>
        -->

        <div class="form-group">
            @Html.LabelFor(model => model.response, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.response, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.response, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
